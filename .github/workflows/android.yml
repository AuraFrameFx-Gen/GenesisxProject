name: Android CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read # Required for checkout
      packages: write # If you publish packages to GitHub Packages
      # issues: write # If you want to create/update issues for failures
      # pull-requests: write # If you want to comment on PRs

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'gradle' # Caches Gradle dependencies

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle (Debug)
      run: ./gradlew buildDebug

    - name: Build with Gradle (Release)
      # Add your signing properties as environment variables or secrets
      env:
        KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }} # Base64 encoded keystore file
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      run: |
        # Decode the keystore file if it's stored as a Base64 secret
        # This part is optional and depends on how you store your keystore.
        # For security, storing the keystore file directly in secrets is not recommended.
        # Instead, consider using a secure vault or a more robust CI/CD secret management.
        if [ -n "$KEYSTORE_FILE" ]; then
          echo "$KEYSTORE_FILE" | base64 -d > ./keystore/auraframefx-release.jks
        fi
        ./gradlew assembleRelease

    # Optional: Run tests
    - name: Run Unit Tests
      run: ./gradlew test

    # Optional: Run Lint checks
    - name: Run Lint
      run: ./gradlew lint

    # Optional: Upload APK/AAB artifacts
    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: app/build/outputs/apk/debug/app-debug.apk

    - name: Upload Release AAB
      uses: actions/upload-artifact@v4
      with:
        name: app-release
        path: app/build/outputs/bundle/release/app-release.aab # Or .apk depending on your setup
